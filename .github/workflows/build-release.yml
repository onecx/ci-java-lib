name: build-release
on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version'
        default: '17'
        required: false
        type: string
      changelog:
        description: 'Generate changelog'
        default: true
        required: false
        type: boolean
      repository:
        description: 'Maven deployment repository Id (ossrh,github)'
        default: 'ossrh'
        required: false
        type: string      
jobs:
  build:
    name: build and deploy project
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v3
      - name: Set up Github Packages
        if: ${{ inputs.repository == 'github' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java-version }}
          cache: 'maven'
      - name: Set up Maven central repository
        if: ${{ inputs.repository == 'ossrh' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java-version }}
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE                  
      - name: Update project version
        run: mvn -ntp -B -e versions:set -DnewVersion=${{ github.ref_name }}
      - name: Deploy release to Github Packages
        if: ${{ inputs.repository == 'github' }}
        run: mvn -ntp -B -e deploy -DskipTests -Prelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy release to Maven central repository
        if: ${{ inputs.repository == 'github' }}
        run: mvn -ntp -B -e deploy -DskipTests -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}             
      - uses: lorislab/install-changelog-action@v1
      - name: Create changelog
        if: ${{ inputs.changelog }}        
        run: changelog generate --create-release --close-version --file .github/changelog.yaml
        env:
          CHANGELOG_TOKEN: ${{ secrets.GITHUB_TOKEN }}